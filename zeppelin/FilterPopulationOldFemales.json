{"paragraphs":[{"text":"%pyspark\r\n# Import the important packages\r\nimport pyspark.sql.functions as f\r\nfrom pyspark import SparkContext\r\nfrom pyspark.sql.functions import explode\r\nfrom pyspark.sql.functions import lit, udf\r\nfrom pyspark.sql.types import ArrayType\r\nfrom pyspark.sql.types import FloatType\r\nfrom pyspark.sql import SQLContext\r\nimport math\r\nimport json","user":"anonymous","dateUpdated":"2020-03-25T11:49:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1585068981005_-136315073","id":"paragraph_1585068981005_-136315073","dateCreated":"2020-03-24T16:56:21+0000","dateStarted":"2020-03-25T11:49:23+0000","dateFinished":"2020-03-25T11:51:32+0000","status":"FINISHED","focus":true,"$$hashKey":"object:1795"},{"text":"%pyspark\n# read data from mongo\ndf = spark.read.format(\"mongo\").option(\"database\", \"geotest-db\").option(\"collection\", \"2020_pop_128_geojson\").load()\ndata = df.select(\"geometry.coordinates\", \"properties.pop\", \"properties.old_females\")\n\n# transform the dataframe into three columns: x,y,z\ntake_first_udf = udf(lambda y: y[0], FloatType())\ntake_second_udf = udf(lambda y: y[1], FloatType())\ndf1 = data.select( \\\n        data.coordinates.alias('coordinates'), \\\n        data.pop.cast(FloatType()).alias('pop'), \\\n        data.old_females.cast(FloatType()).alias('granny'))\n\n# replace all null or na value with 0\ndf1 = df1.na.fill(0)\n\n# take log10 of pop and granny\nlog10_udf = udf(lambda y: math.log10(y), FloatType())\ndf1_log = df1.select(df1.coordinates, log10_udf(df1.pop + lit(1)).alias('pop'), log10_udf(df1.granny + lit(1)).alias('granny'))\n\n# filter dataset for high values\nfilter_val_pop = df1_log.select(\"pop\").rdd.max()[0]*0.75\nfilter_val_granny = df1_log.select(\"granny\").rdd.max()[0]*0.75\ndf_filtered = df1_log.filter((f.col('pop')>filter_val_pop)).filter((f.col('granny')>filter_val_granny))","user":"anonymous","dateUpdated":"2020-03-25T11:55:43+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1585068994433_1875802798","id":"paragraph_1585068994433_1875802798","dateCreated":"2020-03-24T16:56:34+0000","dateStarted":"2020-03-25T11:55:43+0000","dateFinished":"2020-03-25T11:56:20+0000","status":"FINISHED","$$hashKey":"object:1796"},{"text":"%pyspark\ndf_filtered.show(10)","user":"anonymous","dateUpdated":"2020-03-25T11:57:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+---------+---------+\n|         coordinates|      pop|   granny|\n+--------------------+---------+---------+\n|[17.8654166102, 5...| 6.324626|4.8449554|\n|[25.332083247, 59...| 6.077307|4.6511683|\n|[30.6654165589999...|6.7273116|5.3482103|\n|[24.2654165845999...|6.0525627| 4.701775|\n|[60.5320831062000...|6.2443814| 4.707624|\n|[-4.5345833002000...|6.2963104| 4.802107|\n|[-3.4679166378000...|6.2482486|4.7453976|\n|[-1.3345833129999...|6.4300838|  4.91963|\n|[12.5320832982000...| 6.440918|4.9263444|\n|[37.0654165334, 5...| 6.928084|5.4716988|\n+--------------------+---------+---------+\nonly showing top 10 rows\n\n"}]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1585069014483_1228427209","id":"paragraph_1585069014483_1228427209","dateCreated":"2020-03-24T16:56:54+0000","dateStarted":"2020-03-25T11:57:57+0000","dateFinished":"2020-03-25T11:58:03+0000","status":"FINISHED","$$hashKey":"object:1797"},{"text":"%pyspark\nfeatures = []\ninsert_features = lambda X: features.append(\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n          \"pop\": X[\"pop\"],\n          \"old_females\": X[\"granny\"]\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": X[\"coordinates\"]\n      }\n    })\nfor row in df_filtered.collect():\n    insert_features(row)\n\ncollection = {\n  \"type\": \"FeatureCollection\",\n  \"features\": features\n}\n\n","user":"anonymous","dateUpdated":"2020-03-25T12:04:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1585069017760_-1826313680","id":"paragraph_1585069017760_-1826313680","dateCreated":"2020-03-24T16:56:57+0000","dateStarted":"2020-03-25T12:04:12+0000","dateFinished":"2020-03-25T12:04:18+0000","status":"FINISHED","$$hashKey":"object:1798"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-03-25T12:04:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"progressUpdateIntervalMs":500,"jobName":"paragraph_1585137852703_1549569966","id":"paragraph_1585137852703_1549569966","dateCreated":"2020-03-25T12:04:12+0000","status":"READY","$$hashKey":"object:1799"}],"name":"FilterPopulationOldFemales","id":"2F5B427Y5","defaultInterpreterGroup":"spark","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}